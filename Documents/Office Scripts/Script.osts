{"version":"0.3.0","body":"function main(workbook: ExcelScript.Workbook, hexRangeAddress: string) {\n    // Get the active worksheet\n    let sheet = workbook.getActiveWorksheet();\n\n    // Get the input range containing hex codes (dynamic range address)\n    let hexRange = sheet.getRange(hexRangeAddress);\n    let hexValues = hexRange.getValues();  // Get all hex values from the range in one call\n\n    // Loop through the range and process hex codes\n    hexValues.forEach((row, rowIndex) => {\n        let hexCode = row[0];  // Assumes 1 column for hex codes\n\n        // Check if it's a non-empty string and a valid hex color code (7 characters, starting with \"#\")\n        if (typeof hexCode === \"string\" && hexCode.length === 7 && hexCode[0] === \"#\") {\n            try {\n                let r = parseInt(hexCode.substring(1, 3), 16);\n                let g = parseInt(hexCode.substring(3, 5), 16);\n                let b = parseInt(hexCode.substring(5, 7), 16);\n\n                // Get the adjacent cell (offset by 1 column to the right)\n                let adjacentCell = hexRange.getCell(rowIndex, 1);\n\n                // Set the background color of the adjacent cell\n                adjacentCell.getFormat().getFill().setColor(`#${hexCode.substring(1)}`);\n            } catch (error) {\n                // Handle any unexpected errors (e.g., conversion issues)\n                let adjacentCell = hexRange.getCell(rowIndex, 1);\n                adjacentCell.setValue(\"Error setting color\");\n            }\n        } else {\n            // If invalid, mark the adjacent cell with an error message or leave it blank\n            let adjacentCell = hexRange.getCell(rowIndex, 1);\n            if (hexCode === \"\" || hexCode === null) {\n                adjacentCell.setValue(\"\");  // Leave empty if no hex code\n            } else {\n                adjacentCell.setValue(\"Invalid hex code\");\n            }\n        }\n    });\n}\n","description":"","noCodeMetadata":"","parameterInfo":"{\"version\":1,\"originalParameterOrder\":[{\"name\":\"hexRangeAddress\",\"index\":0}],\"parameterSchema\":{\"type\":\"object\",\"required\":[\"hexRangeAddress\"],\"properties\":{\"hexRangeAddress\":{\"type\":\"string\"}}},\"returnSchema\":{\"type\":\"object\",\"properties\":{}},\"signature\":{\"comment\":\"\",\"parameters\":[{\"name\":\"workbook\",\"comment\":\"\"},{\"name\":\"hexRangeAddress\",\"comment\":\"\"}]}}","apiInfo":"{\"variant\":\"synchronous\",\"variantVersion\":2}"}